{"ast":null,"code":"import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'http://localhost:4000/api/guess'\n});\n\nconst startGame = async () => {\n  const {\n    data: {\n      msg\n    }\n  } = await instance.post('/start');\n  return msg;\n};\n\nconst guess = async number => {\n  // TODO: Change this to catch error\n  // The error message should be: Error: \"xx\" is not a valid number (1 - 100)\n  // let msg ; //{data:{msg}}\n  try {\n    const {\n      data: {\n        msg\n      }\n    } = await instance.get('/guess', {\n      params: {\n        number\n      }\n    });\n    return msg;\n  } catch (error) {\n    return 'Error: \" ' + number.toString() + ' \" is not a valid number (1 - 100)';\n  }\n};\n\nconst restart = async () => {\n  const {\n    data: {\n      msg\n    }\n  } = await instance.get('/restart');\n  return msg;\n};\n\nexport { startGame, guess, restart };","map":{"version":3,"sources":["/Users/johnson/Desktop/NTU-CSIE/web-programming/wp1092/hw5/review/1/src/axios.js"],"names":["axios","instance","create","baseURL","startGame","data","msg","post","guess","number","get","params","error","toString","restart"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAb,CAAjB;;AAEA,MAAMC,SAAS,GAAG,YAAY;AAC5B,QAAM;AACJC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AADF,MAEF,MAAML,QAAQ,CAACM,IAAT,CAAc,QAAd,CAFV;AAIA,SAAOD,GAAP;AACD,CAND;;AAQA,MAAME,KAAK,GAAG,MAAOC,MAAP,IAAkB;AAC9B;AACA;AACA;AACA,MAAG;AACA,UAAM;AAACJ,MAAAA,IAAI,EAAC;AAACC,QAAAA;AAAD;AAAN,QAAe,MAAML,QAAQ,CAACS,GAAT,CAAa,QAAb,EAAuB;AAAEC,MAAAA,MAAM,EAAE;AAAEF,QAAAA;AAAF;AAAV,KAAvB,CAA3B;AACA,WAAOH,GAAP;AACF,GAHD,CAGC,OAAOM,KAAP,EAAc;AACZ,WAAO,cAAcH,MAAM,CAACI,QAAP,EAAd,GAAiC,oCAAxC;AACF;AACF,CAVD;;AAYA,MAAMC,OAAO,GAAG,YAAY;AAC1B,QAAM;AACJT,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AADF,MAEF,MAAML,QAAQ,CAACS,GAAT,CAAa,UAAb,CAFV;AAIA,SAAOJ,GAAP;AACD,CAND;;AAQA,SAASF,SAAT,EAAoBI,KAApB,EAA2BM,OAA3B","sourcesContent":["import axios from 'axios'\n\nconst instance = axios.create({ baseURL: 'http://localhost:4000/api/guess' })\n\nconst startGame = async () => {\n  const {\n    data: { msg }\n  } = await instance.post('/start')\n\n  return msg\n}\n\nconst guess = async (number) => {\n  // TODO: Change this to catch error\n  // The error message should be: Error: \"xx\" is not a valid number (1 - 100)\n  // let msg ; //{data:{msg}}\n  try{\n     const {data:{msg}} = await instance.get('/guess', { params: { number } })\n     return msg\n  }catch (error) {\n     return 'Error: \" ' + number.toString() +' \" is not a valid number (1 - 100)';\n  }\n}\n\nconst restart = async () => {\n  const {\n    data: { msg }\n  } = await instance.get('/restart')\n\n  return msg\n}\n\nexport { startGame, guess, restart }\n"]},"metadata":{},"sourceType":"module"}